{
	"info": {
		"_postman_id": "7499ddca-7635-4b14-a9d1-bf059337503c",
		"name": "HW3 Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27208917"
	},
	"item": [
		{
			"name": "Список пользователей",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type is correct\", function () {",
							"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");",
							"});",
							"pm.test(\"User returned correct id\", function () {",
							"    var jsonData = pm.response.json();",
							"    var expectedUserId = pm.environment.get(\"user_id\");",
							"    pm.expect(jsonData[0]._id).to.eql(expectedUserId);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/users",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление нового пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
							"});",
							"pm.test(\"Content-Type is correct\", function () {",
							"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"Masha\",\n    \"surname\":\"Petrova\",\n    \"username\": \"mmm123\"\n \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/users",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновить данные пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Donald\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/users/{{user_id}}",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{api_url}}/users/{{user_id}}",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Информация о конкретном пользователе",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/users/{{user_id}}",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Список всех книг",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type is correct\", function () {",
							"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/books",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление новой книги",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
							"});",
							"pm.test(\"Content-Type is correct\", function () {",
							"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\":\"123333\",\n    \"author\":\"people\",\n    \"year\":\"100\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/books",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновить информацию о книге",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"year\":\"200\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_url}}/books/{{book_id}}",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"books",
						"{{book_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Информация о конкретной книге",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/books/{{book_id}}",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"books",
						"{{book_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление конкретной книги",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{api_url}}/books/{{book_id}}",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"books",
						"{{book_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление книги в список взятых пользователем",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{api_url}}/users/{{user_id}}/books/{{book_id}}",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"books",
						"{{book_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление книги из списка взятых пользователем",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{api_url}}/users/{{user_id}}/books/{{book_id}}",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"books",
						"{{book_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Список книг взятых пользователем",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/users/{{user_id}}/books",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Некорректные параметры",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {",
							"    pm.response.to.have.status(500);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/usersddd",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"usersddd"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/user",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		}
	]
}